import time
import logging
import requests
import datetime

from config import BOT_TOKEN, WEATHER_TOKEN # –ë–µ—Ä–µ–º –Ω—É–∂–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞

from sql import db_start, create_profile, edit_profile # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–¥

#–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ –±–∏–±–ª–µ–æ—Ç–µ–∫–∏ aiogram
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.exceptions import BotBlocked
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext

#–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
storage = MemoryStorage()
number = 0
TOKEN = BOT_TOKEN
HELP_COMMAND = """
/give - —Å—Ç–∏–∫–µ—Ä –æ—Ç –±–æ—Ç–∞
/definition - –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
/photo - —Ñ–æ—Ç–æ –æ—Ç –±–æ—Ç–∞
/contact - –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
/vote - –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
/remind - –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
/weathere - –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã
"""

# –ó–∞–ø—É—Å–∫ —Ä–∞–±–æ—Ç—ã —Å –±–¥
async def on_start_up(_):
    await db_start()
    


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ú–µ–Ω—é
menu = ReplyKeyboardMarkup(resize_keyboard=True)
#mb7 = KeyboardButton('/definition')#
mb1 = KeyboardButton('–ü–æ–≥–æ–¥–∞üå°Ô∏è')
#mb2 = KeyboardButton('/give')
#mb3 = KeyboardButton('/photo')
mb4 = KeyboardButton('–ì–¥–µ –º–µ–Ω—è –Ω–∞–π—Ç–∏üë®‚Äçüíª')
#mb5 = KeyboardButton('/vote')
mb6 = KeyboardButton('–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µüïì')

menu.add(mb1,mb4,mb6)



# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π 
kb = ReplyKeyboardMarkup(resize_keyboard=True,
                         one_time_keyboard=True) #default = false 
b1 = KeyboardButton('‚ú®–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å‚ú®')
kb.add(b1)

# –¢–æ–∫–µ–Ω API –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage = storage)


# –ü—Ä–∏–≤–µ—Ç—Å–≤–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫ –Ω–∞–º! –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!',
                           reply_markup=kb)
    await message.delete()
    await create_profile(user_id=message.from_user.id)

# –ö–ª–∞—Å—Å –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–ø–∏—Å–∞–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
class ProfileStatesGroup(StatesGroup):
    photo = State()
    name = State()
    age = State()
    description = State()

class ProfileWeather(StatesGroup):
    city = State()
    
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã –≤ create 
def get_cancel_kb() -> ReplyKeyboardMarkup:
    ckb =ReplyKeyboardMarkup(resize_keyboard=True)
    ckb.add(KeyboardButton('/cancel'))
    return ckb

# –û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
@dp.message_handler(commands=['cancel'], state='*')
async def cancel_command(message: types.Message, state: FSMContext):
    if state is None:
        return
    await state.finish()
    await message.answer('–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ',
                         reply_markup=kb)

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è
@dp.message_handler(lambda message: not message.photo, state=ProfileStatesGroup.photo)
async def check_photo(message: types.Message):
    await message.reply('–≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è!')

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã
@dp.message_handler(lambda message: message.text == "‚ú®–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å‚ú®")
async def create_command(message: types.Message) -> None:
    await message.answer("–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º! –î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è",
                         reply_markup=get_cancel_kb())
    await ProfileStatesGroup.photo.set()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –∞–Ω–∫–µ—Ç–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
@dp.message_handler(content_types=['photo'], state=ProfileStatesGroup.photo)
async def load_photo(message: types.Message, state: FSMContext)-> None:
    async with state.proxy() as data:
        data['photo'] = message.photo[0].file_id
    await message.reply('–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?')
    await ProfileStatesGroup.next()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏ –≤ –∞–Ω–∫–µ—Ç–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
@dp.message_handler(state=ProfileStatesGroup.name)
async def load_name(message: types.Message, state: FSMContext)-> None:
    async with state.proxy() as data:
        data['name'] = message.text
    await message.reply('–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
    await ProfileStatesGroup.next()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–æ–∑—Ä–∞—Å—Ç–µ
@dp.message_handler(lambda message: not message.text.isdigit() or float(message.text) > 50, state=ProfileStatesGroup.age)
async def check_age(message: types.Message):
    await message.reply('–ü—Ä–æ–≤–µ—Ä—å —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç!')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –≤ –∞–Ω–∫–µ—Ç–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
@dp.message_handler(state=ProfileStatesGroup.age)
async def load_age(message: types.Message, state: FSMContext)-> None:
    async with state.proxy() as data:
        data['age'] = message.text
    await message.reply('–ê —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ')
    await ProfileStatesGroup.next()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ –≤ –∞–Ω–∫–µ—Ç–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
@dp.message_handler(state=ProfileStatesGroup.description)
async def load_description(message: types.Message, state: FSMContext)-> None:
    async with state.proxy() as data:
        data['description'] = message.text
        await bot.send_photo(chat_id=message.from_user.id,
                             photo=data['photo'],
                             caption=f"{data['name']}, {data['age']}\n{data['description']}",
                             reply_markup=menu)
    await edit_profile(state, user_id=message.from_user.id)
    await message.reply('–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞')
    await state.finish()

@dp.message_handler(lambda message: message.text == "–ü–æ–≥–æ–¥–∞üå°Ô∏è") # –ù–∞–π—Ç–∏ —Å–ø–æ—Å–æ–± –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å commands=['weather'] !!!!
async def weather_command(message: types.Message):
    await message.answer("–î–∞–≤–∞–π —É–∑–Ω–∞–µ–º –ø–æ–≥–æ–¥—É! –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
    await ProfileWeather.city.set()
   
   
@dp.message_handler(state=ProfileWeather.city)
async def load_description(message: types.Message, state: FSMContext)-> None:
    code_to_smile = {
        "Clear": "–Ø—Å–Ω–æ \U00002600",
        "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
        "Rain": "–î–æ–∂–¥—å \U00002614",
        "Drizzle": "–î–æ–∂–¥—å \U00002614",
        "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
        "Snow": "–°–Ω–µ–≥ \U0001F328",
        "Mist": "–¢—É–º–∞–Ω \U0001F32B"
    }
    try:
        request = requests.get(
           f"https://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={WEATHER_TOKEN}&units=metric"
        )
        data = request.json()
        city = data["name"]
        tempreture = data["main"]["temp"]
        description = data["weather"][0]["main"]
        if description in code_to_smile:
            wd=code_to_smile[description]
        else:
            wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –ø–æ–π–º—É —á—Ç–æ –∑–∞ –ø–æ–≥–æ–¥–∞!"
        humidity = data["main"]["humidity"]
        pressure = data["main"]["pressure"]
        wind = data["wind"]["speed"]
        sunrise_time = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        sunset_time = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
        lenth_of_the_day = datetime.datetime.fromtimestamp(data["sys"]["sunset"]) - datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        await message.answer(f"***{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}***\n"
              f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city} \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {tempreture}–°¬∞ {wd} \n"
              f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–í–µ—Ç–µ—Ä: {wind} –º/—Å \n"
              f"–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_time}\n–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_time}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {lenth_of_the_day}\n"
              f"***–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!***",
              reply_markup=menu)
        await state.finish() 
    except:
        await message.reply("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
        
#@dp.message_handler()
#async def bot_message(message: types.Message):
 #   if message.text == '–ü–æ–≥–æ–¥–∞':
        weather_command()
        #await message.answer("–î–∞–≤–∞–π —É–∑–Ω–∞–µ–º –ø–æ–≥–æ–¥—É! –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
        #await ProfileWeather.city.set()    

# –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —Å —Ñ–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º –∫ –Ω–µ–º—É, –≤—ã–±–æ—Ä –∏–∑ —á–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –≤ –≤–∏–¥–µ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã 
@dp.message_handler(commands=['vote'])
async def vote_command(message: types.Message):
    ikb1 = InlineKeyboardMarkup(row_width=2)
    ibb1 = InlineKeyboardButton(text='‚ù§Ô∏è', 
                                 callback_data="like_yes")
    ibb2 = InlineKeyboardButton(text='üëé',
                                 callback_data="like_no")
    ikb1.add(ibb1,ibb2)
    await bot.send_photo(chat_id=message.from_user.id,
                         photo='https://vsegda-pomnim.com/uploads/posts/2022-04/1651245136_45-vsegda-pomnim-com-p-mandarin-frukt-foto-68.jpg',
                         caption='–ù—Ä–∞–≤–∏—Ç—Å—è –ª–∏ —Ç–µ–±–µ –¥–∞–Ω–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è?',
                         reply_markup=ikb1)

# –û—Ç–≤–µ—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ —Ñ—É–Ω–∫—Ü–∏–∏ /vote
@dp.callback_query_handler(lambda callback_query: callback_query.data.startswith('like'))
async def vote_callback(callback: types.CallbackQuery):
    if callback.data == 'like_yes':
        await callback.answer(text="–¢–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –¥–∞–Ω–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è")
    elif callback.data == 'like_no':
        await callback.answer("–¢–µ–±–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —ç—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è")

# –ö–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ keyboard 
ikb = InlineKeyboardMarkup(row_width=2)
ib1 = InlineKeyboardButton(text = '–í–∫',
                            url = "https://vk.com/parions")
ib2 = InlineKeyboardButton(text = 'GitHub',
                            url = "https://github.com/Parions137")
ikb.add(ib1, ib2)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–∞–π—Ç—ã
@dp.message_handler(lambda message: message.text == "–ì–¥–µ –º–µ–Ω—è –Ω–∞–π—Ç–∏üë®‚Äçüíª")
async def contact_handler(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text='–°–æ—Ü—Å–µ—Ç–∏',
                           reply_markup=ikb)
    await message.delete()
    
# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ (HELP_COMMAND)
@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text=HELP_COMMAND)
    await message.delete()

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∏–∫–µ—Ä –ø–æ –∫–æ–º–∞–Ω–¥–µ give
@dp.message_handler(commands=['give'])
async def sticker_command(message: types.Message):
    await bot.send_sticker(message.from_user.id,
                           sticker="CAACAgIAAxkBAAEHE0BjrxcW33ElfEB4fj_f2lqb6QQFPwACHAEAAhUiIB3RpiCH2_XQFy0E")
    await message.delete()

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞
@dp.message_handler(commands=['definition'])
async def dsc_command(message: types.Message):
    await bot.send_message(—Åhat_id=message.from_user.id,
                           text="–ë–æ—Ç —É–º–µ–µ—Ç –º–Ω–æ–≥–æ–µ")
    await message.delete()

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç —Ñ–æ—Ç–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ photo
@dp.message_handler(commands=['photo'])
async def photo_command(message: types.Message):
    await bot.send_photo(message.from_user.id, 
                         photo="https://kartiny-po-nomeram.ru/assets/images/catalog/59412/ds582.jpg")
    await message.delete()

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º—Å—è —Ç–µ–∫—Å—Ç–æ–º
@dp.message_handler(lambda message: message.text == "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µüïì")
async def remind_command(message: types.Message) -> None:
    user_id = message.from_user.id
    user_name = message.from_user.full_name
    logging.info(f'{user_id=} {user_name} {time.asctime()}')
    for i in range(5):
        time.sleep(5)
        await bot.send_message(user_id,
                               text='–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ')
    
# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å—á–µ—Ç—á–∏–∫–∞
def get_inline_keyboard() -> InlineKeyboardMarkup:
    iikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton('Increase', callback_data="btn_increase"), InlineKeyboardButton('Decrease', callback_data="btn_decrease")],
        ])
    return iikb

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—á–µ—Ç—á–∏–∫–æ–º. –æ–¥–∏–Ω —Å—á–µ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö, –Ω–∞–π—Ç–∏ –∫–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å
@dp.message_handler(commands=['count'])
async def count_command(message: types.Message) -> None:
    await message.answer(f'The current number is {number}',
                         reply_markup=get_inline_keyboard())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –¥–ª—è —Å—á–µ—Ç—á–∏–∫–∞. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å—á–µ—Ç—á–∏–∫–∞
@dp.callback_query_handler(lambda callback_query: callback_query.data.startswith('btn'))
async def count_kb_callback(callback: types.CallbackQuery) -> None:
    global number
    if callback.data == 'btn_increase': 
        number +=1
        await callback.message.edit_text(f'The current number is {number}',
                                         reply_markup=get_inline_keyboard())
    elif callback.data == 'btn_decrease':
        number -=1
        await callback.message.edit_text(f'The current number is {number}',
                                         reply_markup=get_inline_keyboard())
    else:
        1/0

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –µ—Å–ª–∏ –±–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
@dp.errors_handler(exception=BotBlocked)
async def error_bot_blocked(update: types.Update, exeption: BotBlocked) -> bool:
    print('Cant send message')
    return True

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
if __name__ == '__main__':
    executor.start_polling(dispatcher=dp,
                           skip_updates=True,
                           on_startup=on_start_up)